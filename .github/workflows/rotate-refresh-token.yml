name: Rotate Refresh Token

on:
  schedule:
    - cron: '45 * * * *'  # Weekly on Sunday at midnight UTC
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to rotate token for'
        required: true
        default: 'live'
        type: choice
        options:
          - live
          - sim

concurrency:
  group: rotate-rt
  cancel-in-progress: false

jobs:
  rotate-token:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: ${{ fromJSON( format('[\"{0}\"]', coalesce(github.event.inputs.environment, 'live,sim')) ) }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
      - name: Rotate Refresh Token
        env:
          CLIENT_ID: ${{ matrix.environment == 'live' && secrets.LIVE_CLIENT_ID || secrets.SIM_CLIENT_ID }}
          CLIENT_SECRET: ${{ matrix.environment == 'live' && secrets.LIVE_CLIENT_SECRET || secrets.SIM_CLIENT_SECRET }}
          REFRESH_TOKEN: ${{ matrix.environment == 'live' && secrets.LIVE_REFRESH_TOKEN || secrets.SIM_REFRESH_TOKEN }}
          ENVIRONMENT: ${{ matrix.environment }}
        run: |
          python scripts/rotate_token.py
      - name: Update GitHub Secret
        env:
          GH_PAT: ${{ secrets.GH_PAT_ROBOT }}
          NEW_TOKEN: ${{ env.NEW_REFRESH_TOKEN }}
          SECRET_NAME: ${{ matrix.environment == 'live' && 'LIVE_REFRESH_TOKEN' || 'SIM_REFRESH_TOKEN' }}
        run: |
          curl -X PUT \
            -H "Authorization: token $GH_PAT" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/actions/secrets/$SECRET_NAME \
            -d "{\"encrypted_value\":\"$NEW_TOKEN\",\"key_id\":\"${{ secrets.GH_KEY_ID }}\"}"
      - name: Trigger Deployment
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GH_PAT_ROBOT }}
          event-type: deploy-to-vps
          client-payload: '{"environment": "${{ matrix.environment }}"}'
