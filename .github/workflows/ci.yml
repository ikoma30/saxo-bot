name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, self-hosted]
        python-version: [3.12]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root
      - name: Lint with ruff
        run: |
          poetry run ruff check .
      - name: Format check with black
        run: |
          poetry run black --check .
      - name: Type check with mypy
        run: |
          poetry run mypy .

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, self-hosted]
        python-version: [3.12]
        use_trade_v3: [false, true]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root
      - name: Test with pytest
        env:
          USE_TRADE_V3: ${{ matrix.use_trade_v3 }}
        run: |
          poetry run pytest --cov=src --cov-report=xml --cov-report=term --cov-branch --cov-fail-under=85
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
          token: ${{ secrets.GITHUB_TOKEN }}

  integration-sim:
    needs: test
    runs-on: ubuntu-latest
    env:
      SIM_ACCOUNT_KEY: ${{ secrets.SIM_ACCOUNT_KEY }}
      SIM_REFRESH_TOKEN: ${{ secrets.SIM_REFRESH_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install & run canary
        run: |
          pip install poetry
          poetry install --no-root
          poetry run pytest tests/integration/test_sim_canary.py -q
      - name: Upload canary logs
        uses: actions/upload-artifact@v4
        with:
          name: sim-canary-logs
          path: logs/

  docker-build:
    needs: integration-sim
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Docker build
        run: docker compose -f docker-compose.sim.yml build
